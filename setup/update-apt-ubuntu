#!/usr/bin/env sh

_exist()    { command -v "$@" >/dev/null 2>&1; }
_error()    { printf 'ERROR: %s\n' "$1"; exit 1; }

SUDO=""
if [ "$(id -u)" -ne 0 ]; then
    if _exist "sudo"; then
        SUDO="$(command -v sudo)"
    else
        _error 'Please run as root or install sudo'
    fi
fi

# Set default mirror list
MIRRORS="http://ftp.lysator.liu.se/ubuntu/
http://ubuntu.mirror.su.se/ubuntu/
http://ftp.acc.umu.se/ubuntu/"

# Set default repositories
REPOS="main restricted universe multiverse"

# Set help message
HELP_MSG="Usage: $(basename "$0") [-m MIRRORS] [-r REPOS]
Update the apt repositories in Ubuntu.

Optional arguments:
  -m MIRRORS  Specify a comma-separated list of mirrors to use.
  -r REPOS    Specify a comma-separated list of repositories to add.
  -h          Display this help message and exit."

# Parse command-line arguments
while getopts "m:r:h" opt; do
  case $opt in
    m) MIRRORS="$OPTARG" ;;
    r) REPOS="$OPTARG" ;;
    h) printf "%s\n" "$HELP_MSG" ; exit 0 ;;
    *) printf "%s\n" "$HELP_MSG" ; exit 1 ;;
  esac
done

if _exist 'lsb_release'; then
    if [ "$(lsb_release -i | awk '{print $2}')" = "Ubuntu"]; then

fi

# Check if running inside Ubuntu
if ! command -v lsb_release >/dev/null; then
  printf "This script is intended to run on Ubuntu only.\n" >&2
  exit 1
fi

# Check if /etc/apt/sources.list exists and is writeable
if [ ! -w "/etc/apt/sources.list" ]; then
  printf "/etc/apt/sources.list does not exist or is not writeable.\n" >&2
  exit 1
fi

# Get Ubuntu codename
CODENAME=$(lsb_release -c | awk '{print $2}')

TMP_FILE=$(mktemp)

# Test mirrors and select first active one
for MIRROR in $(echo "$MIRRORS" | tr ',' ' '); do
  if curl --head --silent --fail "$MIRROR/dists/$CODENAME/Release" >/dev/null; then
    printf "Using mirror: %s\n" "$MIRROR"
    break
  fi
done

# Add repositories to sources.list
#for REPO in $(echo "$REPOS" | tr ',' ' '); do
#  printf "deb %s %s %s\n" "$MIRROR" "$CODENAME" "$REPO" >> $TMP_FILE
#  printf "deb-src %s %s %s\n" "$MIRROR" "$CODENAME" "$REPO" >> $TMP_FILE
#done

cat << EOF > "$TMP_FILE"
deb $MIRROR $CODENAME $REPOS
deb $MIRROR $CODENAME-updates $REPOS
deb $MIRROR $CODENAME-backports $REPOS
deb $MIRROR $CODENAME-security $REPOS

# Uncomment lines below to enable source packages
# deb-src $MIRROR $CODENAME $REPOS
# deb-src $MIRROR $CODENAME-updates $REPOS
# deb-src $MIRROR $CODENAME-backports $REPOS
# deb-src $MIRROR $CODENAME-security $REPOS
EOF

cat "$TMP_FILE"

# Uncomment lines below to enable source packages
#sed -i '/^# deb-src /s/^# //' /etc/apt/sources.list

printf "Apt repositories updated successfully.\n"




'''''''''''''''''''''''''''''''''''''''''''''''''''''
########################################################

#!/bin/bash

# Parse command line options
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -m|--mirrors)
        MIRRORS="$2"
        shift
        shift
        ;;
        -r|--repos)
        REPOS="$2"
        shift
        shift
        ;;
        -h|--help)
        echo "Usage: $0 [options]"
        echo "Options:"
        echo "  -m, --mirrors      comma-separated list of mirror URLs to test (default: http://ftp.lysator.liu.se/ubuntu/,http://ubuntu.mirror.su.se/ubuntu/,http://ftp.acc.umu.se/ubuntu/)"
        echo "  -r, --repos        comma-separated list of repositories to include (default: main,restricted,universe,multiverse)"
        echo "  -h, --help         display this help message"
        exit
        ;;
        *)
        echo "Unknown option: $1"
        exit 1
        ;;
    esac
done

# Set default values for options
MIRRORS="${MIRRORS:-http://ftp.lysator.liu.se/ubuntu/,http://ubuntu.mirror.su.se/ubuntu/,http://ftp.acc.umu.se/ubuntu/}"
REPOS="${REPOS:-main,restricted,universe,multiverse}"

# Check that script is running on Ubuntu and that /etc/apt/sources.list exists and is writable
if [[ "$(lsb_release -i | awk '{print $3}')" != "Ubuntu" ]]; then
    echo "This script is intended to run on Ubuntu only"
    exit 1
fi
if [[ ! -f /etc/apt/sources.list ]]; then
    echo "/etc/apt/sources.list does not exist"
    exit 1
fi
if [[ ! -w /etc/apt/sources.list ]]; then
    echo "/etc/apt/sources.list is not writable"
    exit 1
fi

# Set the codename of the Ubuntu release
CODENAME=$(lsb_release -c | awk '{print $2}')

# Test mirrors for availability and choose the first one that responds
for mirror in $(echo "$MIRRORS" | tr ',' ' '); do
    if curl --output /dev/null --silent --head --fail "$mirror/dists/$CODENAME/Release"; then
        BASE_URL="$mirror"
        break
    fi
done

# If no mirror is available, exit with an error message
if [[ -z $BASE_URL ]]; then
    echo "Unable to find a working mirror for $CODENAME"
    exit 1
fi

# Create backup of sources.list file
cp /etc/apt/sources.list /etc/apt/sources.list.bak

# Write new sources.list file with selected mirror and repositories
echo "Updating sources.list with $BASE_URL"
cat << EOF > /etc/apt/sources.list
deb $BASE_URL $CODENAME $REPOS
deb $BASE_URL $CODENAME-updates $REPOS
deb $BASE_URL $CODENAME-backports $REPOS
deb $BASE_URL $CODENAME-security $REPOS

# Uncomment lines below to enable source packages
# deb-src $BASE_URL $CODENAME $REPOS
# deb-src $BASE_URL $CODENAME-updates $REPOS
# deb-src $BASE_URL $CODENAME-backports $REPOS
# deb-src $BASE_URL $CODENAME-security $RE


#!/bin/bash

# Default mirror list
MIRRORS=("http://ftp.lysator.liu.se/ubuntu/" "http://ubuntu.mirror.su.se/ubuntu/" "http://ftp.acc.umu.se/ubuntu/")

# Default repositories
REPOSITORIES=("main" "restricted" "universe" "multiverse")

# Help function
function help {
    echo "Usage: $(basename "$0") [-m <mirror1,mirror2,...>] [-r <repository1,repository2,...>]"
    echo "Update apt repositories in Ubuntu."
    echo ""
    echo "Options:"
    echo "  -m, --mirrors <mirror1,mirror2,...>   Comma separated list of mirrors to use"
    echo "  -r, --repositories <repository1,repository2,...> Comma separated list of repositories to use"
    echo "  -h, --help                            Display this help message"
}

# Parse arguments
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -m|--mirrors)
    MIRRORS=($(echo "$2" | tr ',' ' '))
    shift # past argument
    shift # past value
    ;;
    -r|--repositories)
    REPOSITORIES=($(echo "$2" | tr ',' ' '))
    shift # past argument
    shift # past value
    ;;
    -h|--help)
    help
    exit 0
    ;;
    *)    # unknown option
    echo "Unknown option: $1"
    help
    exit 1
    ;;
esac
done

# Check if running on Ubuntu
if [[ $(lsb_release -i | awk '{print $3}') != "Ubuntu" ]]; then
    echo "This script only runs on Ubuntu."
    exit 1
fi

# Check if sources.list exists and is writable
if [[ ! -w /etc/apt/sources.list ]]; then
    echo "/etc/apt/sources.list does not exist or is not writable."
    exit 1
fi

# Get codename of Ubuntu release
CODENAME=$(lsb_release -c | awk '{print $2}')

# Check if CODENAME variable is not empty
if [[ -z $CODENAME ]]; then
    echo "Unable to get codename of Ubuntu release."
    exit 1
fi

# Check if at least one mirror is available
AVAILABLE_MIRROR=""
for mirror in "${MIRRORS[@]}"
do
    if curl --output /dev/null --silent --head --fail "$mirror"; then
        AVAILABLE_MIRROR="$mirror"
        break
    fi
done

if [[ -z $AVAILABLE_MIRROR ]]; then
    echo "None of the provided mirrors are available."
    exit 1
fi

# Generate sources.list content
SOURCE_CONTENT=""
for repository in "${REPOSITORIES[@]}"
do
    SOURCE_CONTENT+="deb $AVAILABLE_MIRROR $CODENAME $repository\n"
    SOURCE_CONTENT+="deb-src $AVAILABLE_MIRROR $CODENAME $repository\n"
done

# Add sources.list content to file
echo "Updating /etc/apt/sources.list..."
echo -e "$SOURCE_CONTENT" | sudo tee /etc/apt/sources.list > /dev/null

# Uncomment lines below to enable source packages
#sed -i 's/# deb-src/deb-src/g' /etc/apt/sources.list
#apt-get update

echo "Done."


#!/bin/sh

print_help() {
  printf "Usage: %s [-h] [-m mirror1,mirror2,mirror3] [-r repository1,repository2,repository3]\n" "$0"
  printf "  -h: Print this help message\n"
  printf "  -m: Comma-separated list of mirrors to check, in order of preference\n"
  printf "  -r: Comma-separated list of repositories to enable\n"
}

check_ubuntu() {
  # Check that the system is running Ubuntu
  if [ ! -f "/etc/lsb-release" ] || ! grep -q "Ubuntu" /etc/lsb-release; then
    printf "This script is only intended to run on Ubuntu\n"
    exit 1
  fi

  # Check that /etc/apt/sources.list exists and is writable
  if [ ! -w "/etc/apt/sources.list" ]; then
    printf "Could not write to /etc/apt/sources.list\n"
    exit 1
  fi
}

# Set default values
mirrors="http://ftp.lysator.liu.se/ubuntu/,http://ubuntu.mirror.su.se/ubuntu/,http://ftp.acc.umu.se/ubuntu/"
repositories="main,restricted,universe,multiverse"

# Parse arguments
while getopts "hm:r:" opt; do
  case $opt in
    h)
      print_help
      exit 0
      ;;
    m)
      mirrors=$OPTARG
      ;;
    r)
      repositories=$OPTARG
      ;;
    \?)
      printf "Invalid option: -$OPTARG\n"
      print_help
      exit 1
      ;;
    :)
      printf "Option -$OPTARG requires an argument\n"
      print_help
      exit 1
      ;;
  esac
done

# Check that the system is running Ubuntu and /etc/apt/sources.list is writable
check_ubuntu

# Set codename based on lsb_release output
codename=$(lsb_release -c | awk '{print $2}')

# Test mirrors in order until one is found that responds
for mirror in $(echo "$mirrors" | tr "," "\n"); do
  if curl -f -s "$mirror/dists/$codename/Release" > /dev/null; then
    printf "Using mirror: %s\n" "$mirror"
    break
  else
    printf "Failed to connect to mirror: %s\n" "$mirror"
  fi
done

# Enable specified repositories
printf "Enabling repositories: %s\n" "$repositories"
echo "# $codename main restricted universe multiverse" | tee -a /etc/apt/sources.list > /dev/null
echo "deb $mirror $codename $repositories" | tee -a /etc/apt/sources.list > /dev/null
echo "deb $mirror $codename-updates $repositories" | tee -a /etc/apt/sources.list > /dev/null
echo "deb $mirror $codename-backports $repositories" | tee -a /etc/apt/sources.list > /dev/null
echo "deb $mirror $codename-security $repositories" | tee -a /etc/apt/sources.list > /dev/null
echo "# deb-src $mirror $codename main restricted universe multiverse" | tee -a /etc/apt/sources.list > /dev/null
echo "# deb-src $mirror $codename-updates $repositories" | tee -a /etc/apt/sources.list > /dev/null
echo "# deb-src $mirror $codename-backports $repositories" | tee -a /etc/apt/sources.list > /dev/null
echo "#

#!/bin/sh

# Set default mirror list
MIRRORS="http://ftp.lysator.liu.se/ubuntu/
http://ubuntu.mirror.su.se/ubuntu/
http://ftp.acc.umu.se/ubuntu/"

# Set default repositories
REPOS="main restricted universe multiverse"

# Set help message
HELP_MSG="Usage: $(basename "$0") [-m MIRRORS] [-r REPOS]
Update the apt repositories in Ubuntu.

Optional arguments:
  -m MIRRORS  Specify a comma-separated list of mirrors to use.
  -r REPOS    Specify a comma-separated list of repositories to add.
  -h          Display this help message and exit."

# Parse command-line arguments
while getopts "m:r:h" opt; do
  case $opt in
    m) MIRRORS="$OPTARG" ;;
    r) REPOS="$OPTARG" ;;
    h) printf "%s\n" "$HELP_MSG" ; exit 0 ;;
    *) printf "%s\n" "$HELP_MSG" ; exit 1 ;;
  esac
done

# Check if running inside Ubuntu
if ! command -v lsb_release >/dev/null; then
  printf "This script is intended to run on Ubuntu only.\n" >&2
  exit 1
fi

# Check if /etc/apt/sources.list exists and is writeable
if [ ! -w "/etc/apt/sources.list" ]; then
  printf "/etc/apt/sources.list does not exist or is not writeable.\n" >&2
  exit 1
fi

# Get Ubuntu codename
CODENAME=$(lsb_release -c | awk '{print $2}')

# Test mirrors and select first active one
for MIRROR in $(echo "$MIRRORS" | tr ',' ' '); do
  if curl --head --silent --fail "$MIRROR/dists/$CODENAME/Release" >/dev/null; then
    printf "Using mirror: %s\n" "$MIRROR"
    break
  fi
done

# Add repositories to sources.list
for REPO in $(echo "$REPOS" | tr ',' ' '); do
  printf "deb %s %s %s\n" "$MIRROR" "$CODENAME" "$REPO" >> /etc/apt/sources.list
  printf "deb-src %s %s %s\n" "$MIRROR" "$CODENAME" "$REPO" >> /etc/apt/sources.list
done

# Uncomment lines below to enable source packages
#sed -i '/^# deb-src /s/^# //' /etc/apt/sources.list

printf "Apt repositories updated successfully.\n"


#!/bin/sh

# List of mirror addresses to test
MIRRORS="http://ftp.lysator.liu.se/ubuntu/ http://ubuntu.mirror.su.se/ubuntu/ http://ftp.acc.umu.se/ubuntu/"

# List of repositories to add
REPOSITORIES="main restricted universe multiverse"

# Get the distribution codename (e.g. "jammy")
CODENAME=$(lsb_release -c | awk '{print $2}')

# Create a temporary file to store the modified sources.list
TMP_FILE=$(mktemp)

# Loop through the mirrors and use the first one that responds
for MIRROR in $MIRRORS; do
    if curl --head --fail --silent --max-time 10 "$MIRROR" >/dev/null 2>&1; then
        break
    fi
done

# Check if a mirror was found
if [ -z "$MIRROR" ]; then
    echo "No working mirrors found."
    exit 1
fi

# Add the repositories to the temporary file
echo "deb $MIRROR $CODENAME $REPOSITORIES" >> "$TMP_FILE"
echo "deb $MIRROR $CODENAME-updates $REPOSITORIES" >> "$TMP_FILE"
echo "deb $MIRROR $CODENAME-backports $REPOSITORIES" >> "$TMP_FILE"
echo "deb $MIRROR $CODENAME-security $REPOSITORIES" >> "$TMP_FILE"

# Append the deb-src lines to the temporary file
echo "" >> "$TMP_FILE"
echo "# src, uncomment if needed" >> "$TMP_FILE"
echo "#deb-src $MIRROR $CODENAME $REPOSITORIES" >> "$TMP_FILE"
echo "#deb-src $MIRROR $CODENAME-updates $REPOSITORIES" >> "$TMP_FILE"
echo "#deb-src $MIRROR $CODENAME-backports $REPOSITORIES" >> "$TMP_FILE"
echo "#deb-src $MIRROR $CODENAME-security $REPOSITORIES" >> "$TMP_FILE"

# Replace the original sources.list file with the temporary file atomically
#mv "$TMP_FILE" /etc/apt/sources.list
cat "$TMP_FILE"
